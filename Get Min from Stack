

class SpecialStack {
  public:
    stack<int>st;
    stack<int> m;
    SpecialStack() {
        // Define Stack
        
    }

    void push(int x) {
        // Add an element to the top of Stack
        st.push(x);
        if (m.empty() || x<=m.top()) m.push(x);
    }

    void pop() {
        // Remove the top element from the Stack
        if (st.empty()) return;
        if (st.top()==m.top()) m.pop();
        st.pop();
    }

    int peek() {
        // Returns top element of the Stack
        if (st.empty()) return -1;
        return st.top();
    }

    bool isEmpty() {
        // Check if stack is empty
        return st.empty();
    }

    int getMin() {
        // Finds minimum element of Stack
        if (m.empty()) return -1;
        return m.top();
    }
};

